type ResumeSection {
  id: ID!
  sectionName: String!
  content: String!
  createdAt: String
  updatedAt: String
}

type Resume {
  id: ID!
  title: String!
  latexCode: String
  optimizedLatex: String
  fileUrl: String
  fileType: String
  sections: [ResumeSection!]!
  createdAt: String
  updatedAt: String
}

type Query {
  getUserResumes(userId: ID!): [Resume!]!
}

scalar Upload


type Mutation {
  uploadResume(
    title: String!
    latexCode: String
    file: Upload
    fileType: String
  ): Resume!

  # Generate AI-optimized preview (does NOT persist)
  optimizeResumePreview(
    resumeId: ID!
    jobDescriptionId: ID!
  ): OptimizedResumePreview!

  # Accept preview and persist optimizedLaTeX onto existing resume
  acceptOptimizedResume(
    resumeId: ID!
    optimizedLatex: String!
  ): Resume!
}

type OptimizedChange {
  sectionName: String!
  changeType: String! # added | modified | removed | unchanged
  originalContent: String
  newContent: String
  explanation: String
}

type OptimizedSection {
  sectionName: String!
  content: String!
}

type OptimizedResumePreview {
  optimizedLatex: String!
  optimizedSections: [OptimizedSection!]!
  changes: [OptimizedChange!]!
}